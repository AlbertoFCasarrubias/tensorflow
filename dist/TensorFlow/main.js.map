{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>Tensorflow.js Real Time Object Detection</h1>\\n  <video hidden id=\\\"vid\\\" width=\\\"300\\\" height=\\\"300\\\"></video>\\n  <canvas id=\\\"canvas\\\"></canvas>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport * as cocoSSD from '@tensorflow-models/coco-ssd';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n    title = 'TensorFlow';\n    video: HTMLVideoElement;\n\n  ngOnInit()\n  {\n    this.webcam_init();\n    this.predictWithCocoModel();\n  }\n\n    webcam_init() {\n        this.video = <HTMLVideoElement>document.getElementById('vid');\n        navigator.mediaDevices\n            .getUserMedia({\n                audio: false,\n                video: { facingMode: 'user' }\n            })\n            .then(stream => {\n                this.video.srcObject = stream;\n                this.video.onloadedmetadata = () => {\n                    this.video.play();\n                };\n            });\n    }\n\n    public async predictWithCocoModel() {\n        const model = await cocoSSD.load('lite_mobilenet_v2');\n        this.detectFrame(this.video, model);\n    }\n\n    detectFrame = (video, model) => {\n        model.detect(video).then(predictions => {\n            this.renderPredictions(predictions);\n            requestAnimationFrame(() => {\n                this.detectFrame(video, model);\n            });\n        });\n    };\n\n    renderPredictions = predictions => {\n        const canvas = <HTMLCanvasElement>document.getElementById('canvas');\n\n        const ctx = canvas.getContext('2d');\n        canvas.width = 300;\n        canvas.height = 300;\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n        // Fonts\n        const font = '16px sans-serif';\n        ctx.font = font;\n        ctx.textBaseline = 'top';\n        ctx.drawImage(this.video, 0, 0, 300, 300);\n\n        predictions.forEach(prediction => {\n            // Bounding boxes's coordinates and sizes\n            const x = prediction.bbox[0];\n            const y = prediction.bbox[1];\n            const width = prediction.bbox[2];\n            const height = prediction.bbox[3];\n            // Bounding box style\n            ctx.strokeStyle = '#00FFFF';\n            ctx.lineWidth = 2;\n            // Draw the bounding\n            ctx.strokeRect(x, y, width, height);\n\n            // Label background\n            ctx.fillStyle = '#00FFFF';\n            const textWidth = ctx.measureText(prediction.class).width;\n            const textHeight = parseInt(font, 10); // base 10\n            ctx.fillRect(x, y, textWidth + 4, textHeight + 4);\n        });\n\n        predictions.forEach(prediction => {\n            // Write prediction class names\n            const x = prediction.bbox[0];\n            const y = prediction.bbox[1];\n            ctx.fillStyle = '#000000';\n            ctx.fillText(prediction.class, x, y);\n        });\n    };\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}